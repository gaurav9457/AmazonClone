import * as React from 'react';
import CssBaseline from '@mui/material/CssBaseline';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Container from '@mui/material/Container';
import Toolbar from '@mui/material/Toolbar';
import Paper from '@mui/material/Paper';
import Stepper from '@mui/material/Stepper';
import Step from '@mui/material/Step';
import StepLabel from '@mui/material/StepLabel';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import AddressForm from './AddressForm';
import PaymentForm from './PaymentForm';
import Review from './Review';
import { Link } from 'react-router-dom';
import { Alert, Snackbar } from '@mui/material';


const steps = ['Shipping address', 'Payment details','Review'];

// function getStepContent(step) {
//   switch (step) {
//     case 0:
//       return <AddressForm value={zip} />;
//     case 1:
//       return <PaymentForm />;
//     // case 2:
//     //   return <Review />;
//     default:
//       throw new Error('Unknown step');
//   }
// }
// const obj={
//   city:"",
//   zip:"",
//   country:"",
//   state:""
// }
export default function Checkout() {
  const [activeStep, setActiveStep] = React.useState(0);
  const [showAlert, setShowAlert] = React.useState(false);
  const [message, setMessage] = React.useState('');
 
  const [obj, setObj] = React.useState({
    city: "",
    address2:"",
    zip: "",
    country: "",
    state: "",
    cardName:"",
    cardNumber:"",
    cvv:"",
    expiryDate:""
  });

function getStepContent(step) {
    switch (step) {
      case 0:
        return <AddressForm obj={obj} setObj={setObj} />;
      case 1:
        return <PaymentForm obj={obj} setObj={setObj}/>;
      case 2:
        return <Review obj={obj} />;
      default:
        throw new Error('Unknown step');
    }
  }

  const handleNext = () => {
    if (activeStep === 1) {
      
      if (
        obj.cardName === '' ||
        obj.cardNumber === '' ||
        obj.expiryDate === '' ||
        obj.cvv === ''
      ) {
        setShowAlert(true);
        setMessage('Please fill in all card details');
        return; 
      }
    }
    if (obj.city=='') {
      setShowAlert(true);
      setMessage("Enter your city name ")
      
    } 
    else if (obj.zip=='') {
        // alert("Enter zip")
        setShowAlert(true);
        setMessage("Enter Zip Code ")
        
    }
    else if(obj.state==''){
      // alert("Enter Country");
      // setActiveStep(activeStep + 1)
      setShowAlert(true);
      setMessage("Enter state name ")

    }
    
    // else if (obj.cardName === '') {
    //   setActiveStep(activeStep + 1)
    //   setShowAlert(true);
    //     setMessage("Enter card Details ")
    // }
    // else if (obj.cardNumber === '') {
     
    //    setShowAlert(true);
    //     setMessage("Enter card number properly ")
    // }
    // else if ( obj.expiryDate === '') {
    //   setShowAlert(true);
    //   setMessage("Enter card expiry date")
    // }
    // else if ( obj.cvv === '') {
    //   setShowAlert(true);
    //     setMessage("Enter card cvv ")
    // }
    else{
      setActiveStep(activeStep + 1);
    }

  };

  const handleBack = () => {
    setActiveStep(activeStep - 1);
  };

  return (
    <React.Fragment>
      <CssBaseline />
      {/* <AppBar
        position="absolute"
        color="default"
        elevation={0}
        sx={{
          position: 'relative',
          borderBottom: (t) => `1px solid ${t.palette.divider}`,
        }}
      >
        <Toolbar>
          <Typography variant="h6" color="inherit" noWrap>
            Company name
          </Typography>
        </Toolbar>
      </AppBar> */}
      <Container component="main" maxWidth="sm" sx={{ mb: 4 }}>
        <Paper variant="outlined" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>
          <Typography component="h1" variant="h4" align="center">
            Checkout
          </Typography>
          <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>
            {steps.map((label) => (
              <Step key={label}>
                <StepLabel>{label}</StepLabel>
              </Step>
            ))}
          </Stepper>
          {activeStep === steps.length ? (
            <React.Fragment>
              <Typography variant="h5" gutterBottom>
                Thank you for your order.
              </Typography>
              <Typography variant="subtitle1">
                Your order number is #2001539. We have emailed your order
                confirmation, and will send you an update when your order has
                shipped.
              </Typography>
            </React.Fragment>
          ) : (
            <React.Fragment>
              {getStepContent(activeStep)}
              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>
                {activeStep !== 0 && (
                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>
                    Back
                  </Button>
                )}
               

                <Button
                  variant="contained"
                  onClick={handleNext}
                  sx={{ mt: 3, ml: 1 }}
                >
                  {activeStep === steps.length - 1 ? 'Place order' : 'Next'}
                </Button>
                <Link to='/home'><Button sx={{mt:3,ml:1}}variant='outlined'>Cancle</Button></Link>
              </Box>
            </React.Fragment>
          )}
        </Paper>
        {showAlert && (
                        <Snackbar open={showAlert} autoHideDuration={3000}
                            onClose={() => { setShowAlert(false) }} anchorOrigin={{ vertical: 'top', horizontal: "right" }} >
                            <Alert onClose={() => { setShowAlert(false) }} severity={'error'} variant='filled' sx={{ width: '100%' }} >
                                {message}
                            </Alert>
                        </Snackbar>

                    )}
        
      </Container>
    </React.Fragment>
  );
}
