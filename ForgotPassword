import * as React from 'react';
import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import TextField from '@mui/material/TextField';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';

import Grid from '@mui/material/Grid';
import Box from '@mui/material/Box';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { createTheme, ThemeProvider } from '@mui/material/styles';
import { Link, useNavigate, useParams } from 'react-router-dom';
import axios from 'axios';
import { Alert, Snackbar } from '@mui/material';



const defaultTheme = createTheme();


export default function ForgotPassword() {
    const [jsonData,setJsonData] = React.useState([]);
    const [passwordInp,setPasswordInp] = React.useState('');
    const [showAlert, setShowAlert] = React.useState(false);
    const [message, setMessage] = React.useState('');
    const [color,setColor] = React.useState('');
    const url = 'http://localhost:9000/users';
    const {email}= useParams();
    const naviget = useNavigate();


    React.useEffect(() => {
        axios.get(url)
            .then((res) => {
                setJsonData(res.data);
            })

            .catch((error) => {
                console.log(error);
            })
    }, [])

    const handleChenge = (e) => {
       setPasswordInp(e.target.value);
      };


  const handleSubmit = (event) => {
    if (passwordInp == '') {
        console.log("Enter Password");
        setShowAlert(true);
        setMessage("Please Enter new Password")
        setColor('error');
    }
    else {
        jsonData.map((item)=>{

            if (email ==item.email) {

                const updatedUserData = {
                    ...item,
                    password: passwordInp
                  };
              
                  axios.put(`${url}/${item.id}`, updatedUserData)
                    .then(() => {
                      setShowAlert(true);
                      setMessage("Password Chnaged Successfully...!!!!");
                      setColor('success');
                    })
                    .catch((error) => {
                      console.error('Error changing password:', error);
                    });
                   setTimeout(()=>{naviget('/')},2000);
                    // naviget('/');
                
            }
            else{
                console.log("User not found");
            }

        })
         
    
  };
}

  return (
    <ThemeProvider theme={defaultTheme}>
      <Container component="main" maxWidth="xs">
        <CssBaseline />
        <Box
          sx={{
            marginTop: 8,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
          }}
        >
          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>
            <LockOutlinedIcon />
          </Avatar>
          <Typography component="h1" variant="h5">
            New Password
          </Typography>
          <Box component="form"  noValidate sx={{ mt: 1 }}>
            <TextField
              margin="normal"
              required
              fullWidth
              id="pass"
              label="Enter Password"
              name="password"
              autoFocus
            />

            <TextField
              margin="normal"
              required
              fullWidth
              name="password"
              label="Confirm Password"
              type="password"
              id="password"
              onChange={handleChenge}
              value={passwordInp.password}
              
            />
            <FormControlLabel
              control={<Checkbox value="remember" color="primary" />}
              label="Remember me"
            />
            <Button
              type="button"
              fullWidth
              variant="contained"
              sx={{ mt: 3, mb: 2 }}
              onClick={handleSubmit}

            >
              Procced for login
            </Button>
            <Grid container>
              {/* <Grid item xs>
                <Link href="#" variant="body2">
                  Forgot password?
                </Link>
              </Grid> */}
              <Grid item>
                <Link to="/signup" variant="body2">
                  {"Don't have an account? Sign Up"}
                </Link>
              </Grid>
            </Grid>
            {showAlert && (
                        <Snackbar open={showAlert} autoHideDuration={3000}
                            onClose={() => { setShowAlert(false) }} anchorOrigin={{ vertical: 'top', horizontal: "right" }} >
                            <Alert onClose={() => { setShowAlert(false) }} severity={color} sx={{ width: '100%' }} >
                                {message}
                            </Alert>
                        </Snackbar>

                    )}
          </Box>
        </Box>
       
      </Container>
    </ThemeProvider>
  );
}
